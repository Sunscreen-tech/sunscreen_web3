on:
  push:
    branches:
      - main
  pull_request:

env:
  FOUNDRY_REV: d73c9a1de0dbfaa9ffaeb7e82839ff09f302ac0b

name: Rust

jobs:
  tests:
    name: Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Install toolchain
        uses: dtolnay/rust-toolchain@stable

      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true

      - name: Cache - restore anvil binary
        id: cache
        uses: actions/cache/restore@v3
        with:
          path: ~/.cargo/bin/anvil
          key: ${{ runner.os }}-${{ env.FOUNDRY_REV }}-anvil

      - name: Install anvil
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          cargo install \
            --git https://github.com/Sunscreen-tech/foundry \
            --rev ${{ env.FOUNDRY_REV }} \
            --profile local anvil

      - name: Cache - save anvil binary
        uses: actions/cache/save@v3
        if: always()
        with:
          path: ~/.cargo/bin/anvil
          key: ${{ runner.os }}-${{ env.FOUNDRY_REV }}-anvil

      - name: cargo test
        run: cargo test --workspace --all-features

  clippy:
    name: clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@nightly
        with:
          components: clippy
      - uses: Swatinem/rust-cache@v2
      - name: clippy
        run: cargo clippy --workspace --tests --all-features
        env:
          RUSTFLAGS: "-D warnings"

  docs:
    name: docs
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@nightly
        with:
          components: rust-docs
      - uses: Swatinem/rust-cache@v2
      - name: doc
        run: cargo doc --workspace --all-features --no-deps --document-private-items
        env:
          RUSTDOCFLAGS: "-D warnings"

  fmt:
    name: fmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@nightly
        with:
          components: rustfmt
      - name: fmt --check
        run: cargo fmt --all --check
